package application;

import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import entity.Bolsa;
import entity.Loja;
import entity.Produto;

public class CadVendas {
	static List<Bolsa> estoque = new ArrayList<>();

	public static void main(String[] args) {

		List<Bolsa> historico = new ArrayList<>();

		Scanner leia = new Scanner(System.in);
		char opcao1 = 0;
		char opcao2 = 0;
		int achou = 0;
		double totalPagamento;

		Loja loja1 = new Loja("GERAÇÃO DE BOLSAS", "12345678911/0001");
		
		// Itens do Estoque******************************
		estoque.add(new Bolsa(loja1.getNome(), loja1.getCnpj(), "BOLSA DE ALÇA", "BA144", 150.0, 3, "GUCCI"));
		estoque.add(new Bolsa(loja1.getNome(), loja1.getCnpj(), "MOCHILA DE ESPORTE", "ME342", 50.0, 4, "NIKE"));
		estoque.add(new Bolsa(loja1.getNome(), loja1.getCnpj(), "ESCOLAR", "E0342", 30.0, 2, "ADIDAS"));
		estoque.add(new Bolsa(loja1.getNome(), loja1.getCnpj(), "ACAMPAMENTO", "A0978", 200.0, 1, "OAKLEY"));
		estoque.add(new Bolsa(loja1.getNome(), loja1.getCnpj(), "LUXO", "F0761", 100.0, 0, "LOUIS VUITTON"));
		// **********************************************

		System.out.printf("LOJA %s \n", loja1.getNome());
		System.out.println("\n**LISTA DE PRODUTOS**\n");
		MostrarEstoque();

		do {
			System.out.println("Digite o código do que ira comprar: ");
			String codigo = leia.next();
			for (Bolsa prod : estoque) {

				// Verificando escolha *********
				for (Bolsa item : historico) {
					if (codigo.equals(item.getCodigo())) {
						achou++;
					}
				}
				// Verificando escolha *********

				if (achou > 0) {
					System.out.println("Produto já foi comprado");
					break;
				} else if (codigo.equals(prod.getCodigo())) {
					System.out.println("Produto Escolhido: \nDescrição - " + prod.getDescricao() + "\nCódigo: "
							+ prod.getCodigo());
					System.out.println("Quantidade em estoque: " + prod.getQtdeEstoque() + " unidades");
					System.out.println("Quantos deseja comprar: ");
					int quant = leia.nextInt();
					
					System.out.println("Digite 1-Confirmar ou 2-Cancelar: ");
					opcao1 = leia.next().charAt(0);

					if (opcao1 == '1') {
						historico.add(prod);
						prod.tirarEstoque(quant);
					}
				}
			}

			

			// ********

			// ********

			System.out.println("Deseja encerrar a compra ? 1-Sim ou 2-Não");
			opcao2 = leia.next().charAt(0);

			if (opcao2 == '2') {
				System.out.println("**PRODUTOS DISPONIVEIS**");
				MostrarEstoque();
			}
		} while (opcao2 != '1');
		/*
		System.out.println("Forma de pagamento 1-À vista / 2-Débito / 3-Crédito: ");
		char tipoPagamento = leia.next().charAt(0);
		if(tipoPagamento == '1') {
			totalPagamento = prod.getValorUnitario() - (prod.getValorUnitario() * 0.10);
			System.out.println("Valor a do produto: R$ " + totalPagamento + " (Com 10% desconto)");
		} 
		else if(tipoPagamento == '2') {
			totalPagamento = prod.getValorUnitario();
			System.out.println("Valor a do produto: R$ " + totalPagamento + " (Sem desconto)");
		}
		else if(tipoPagamento == '3') {
			System.out.println("Digite 1-Parcelar 1x ou 2-Parcelar 2x:  ");
			char parcelas = leia.next().charAt(0);
			
			if(parcelas == '1') {
				totalPagamento = prod.getValorUnitario() * 1.10;
				System.out.printf("Valor a do produto: 1 parcela de R$ " + totalPagamento + " (Com 10% Juros)");
			}
			else {
				totalPagamento = (prod.getValorUnitario() * 1.20) / 2;
				System.out.println("Valor a do produto: 2 parcelas de R$ " + totalPagamento + " (Com 20% Juros)");
			}
		}*/
	}

	public static void MostrarEstoque() {
		for (Bolsa prod : estoque) {

			if (prod.getQtdeEstoque() > 0) System.out.println("Quantidade: " + prod.getQtdeEstoque());
			else System.out.println("Quantidade: ESGOTADO!!");

			System.out.println(" Marca: " + prod.getMarca());
			System.out.println(" Descrição: " + prod.getDescricao());
			System.out.printf(" Valor Imposto: R$ %.2f \n", prod.getValorUnitario() * 0.09);
			System.out.println(" Valor: R$ " + prod.getValorUnitario());
			System.out.println(" Código: " + prod.getCodigo());
			System.out.println();
		}
	}
}